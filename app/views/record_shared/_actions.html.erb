<% if has_index_actions(controller.model_class) %>
<ul id="menu" class="dropdown menu" data-dropdown-menu data-close-on-click-inside>
  <li class="init_btn">
    <%= link_to content_tag(:span, t("actions.button")), '', class: 'button left action_btn' %>
    <ul class="menu is-dropdown-submenu">
      <% unless params[:id_search].present? && can?(:search_owned_by_others, controller.model_class) %>
        <% if can?(:import, controller.model_class) && controller.model_class != PotentialMatch %>
          <% if controller.model_class == User %>
            <li>
              <%= link_to t('buttons.import'), '#', class: 'has_sub' %>
              <ul class="menu">
                <%= render partial: 'imports/button', locals: {import_label: 'users.label', importers: [Importers::JSONImporter]} %>
                <% if can? :import, FormSection %>
                  <li><%= render partial: 'configuration_bundle/import_button' %></li>
                <% end %>
              </ul>
            </li>
          <% else %>
            <%= render 'imports/button' %>
          <% end %>
        <% end %>
        <% if controller.model_class != PotentialMatch %>
          <% if controller.model_class == User %>
              <% if can?(:export, controller.model_class) %>
                <li>
                  <%= link_to t('buttons.export'), '#', class: 'has_sub' %>
                  <ul class="menu">
                    <% if can? :export, User %>
                      <li>
                        <%= link_to(
                              t('users.label'),
                              url_for(format: 'json', page: 'all', per_page: :all, id: nil, params: exporter_params_page('json', params)),
                              class: 'password-prompt'
                            )
                        %>
                      </li>
                    <% end %>
                    <% if can? :export, FormSection %>
                      <li><%= render :partial => 'configuration_bundle/export_button' %></li>
                    <% end %>
                  </ul>
                </li>
              <% end %>
          <% else %>
            <%= render 'exports/button', locals: {model: model} %>
          <% end %>
        <% end %>
        <% if can?(:export_custom, controller.model_class) && controller.model_class != Incident && controller.model_class != PotentialMatch && controller.model_class != User %>
            <%= render 'exports/custom_exports_link', model: model, export_type: 'custom' %>
        <% end %>
        <% if model == Child %>
          <%= render 'transitions/button', type: Transition::TYPE_REFERRAL %>
          <% if @user_can_assign %>
            <%= render 'transitions/button', type: Transition::TYPE_REASSIGN %>
          <% end %>
          <%= render 'transitions/button', type: Transition::TYPE_TRANSFER %>
        <% end %>
        <% if can?(:sync_mobile, controller.model_class) && controller.model_class.is_syncable_with_mobile? %>
            <%= render 'record_shared/mark_for_mobile_button', mobile_value: true %>
            <%= render 'record_shared/mark_for_mobile_button', mobile_value: false %>
        <% end %>
      <% end %>
      <% #TODO: form_sidebar_id shouldn't be hardcoded here. Find a way to get the top level field id from the sub-form id. %>
      <% if can?(:incident_details_from_case, controller.model_class) && model == Child %>
        <%= render 'record_shared/subform_from_case', form_type: 'incident_details', form_id: 'incident_details_subform_section', form_sidebar_id: 'incident_details_container' %>
      <% end %>
      <% if can?(:services_section_from_case, controller.model_class) && model == Child %>
        <%= render 'record_shared/subform_from_case', form_type: 'services_section', form_id: 'services_section', form_sidebar_id: 'services' %>
      <% end %>
    </ul>
  </li>
</ul>
<% end %>
